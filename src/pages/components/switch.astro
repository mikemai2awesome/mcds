---
import Layout from "../../layouts/Layout.astro";
import ComponentDoc from "../../components/ComponentDoc.astro";
import SwitchComponent from "../../components/Switch.astro";

const switchCode = `<Switch
  id="dark-mode"
  name="theme-toggle"
  label="Dark Mode"
  checked={false}
/>`;
---

<Layout title="Switch">
  <ComponentDoc
    title="Switch"
    description="The Switch component is a visual toggle between two states: on and off. It provides clear visual feedback for the current state and dispatches a custom event when toggled."
    props={[
      {
        name: "label",
        type: "string",
        default: "Required",
        description: "Text label for the switch",
      },
      {
        name: "id",
        type: "string",
        default: "Required",
        description: "Unique identifier for the switch",
      },
      {
        name: "name",
        type: "string",
        default: "Required",
        description: "Name attribute for form submission",
      },
      {
        name: "checked",
        type: "boolean",
        default: "false",
        description: "Whether the switch is in the on state",
      },
    ]}
    usage={{
      dos: `
        <ul>
          <li>Use for binary settings that take immediate effect</li>
          <li>Provide clear, concise labels</li>
          <li>Use for settings that are either on or off</li>
          <li>Place switches in logical groups</li>
          <li>Consider the default state carefully</li>
        </ul>
      `,
      donts: `
        <ul>
          <li>Don't use for actions that require confirmation</li>
          <li>Don't use for multiple options (use radio buttons instead)</li>
          <li>Don't use for settings that don't take immediate effect</li>
          <li>Don't use for destructive actions</li>
          <li>Don't use for complex settings with multiple states</li>
        </ul>
      `,
    }}
    accessibility={{
      keyboardNav: `
        <ul>
          <li>Tab key moves focus to the switch</li>
          <li>Space toggles the switch state</li>
          <li>Switch can be activated by clicking both the control and the label</li>
        </ul>
      `,
      screenReaders: `
        <ul>
          <li>Uses standard checkbox input with an associated label</li>
          <li>Visual switch appearance is created with CSS</li>
          <li>Control element has aria-hidden to avoid duplicate announcements</li>
          <li>Label is properly associated via for attribute</li>
          <li>Custom switch-change event with id and checked state is dispatched on change</li>
        </ul>
      `,
    }}
    code={switchCode}
  >
    <div class="doc-demo-stack">
      <SwitchComponent
        id="dark-mode"
        name="theme-toggle"
        label="Dark Mode"
        checked={false}
      />
    </div>
  </ComponentDoc>
</Layout>
