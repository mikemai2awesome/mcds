---
import Switch from "../components/Switch.astro";

interface Props {
  title: string;
  siteName?: string;
}

const { title, siteName = "MCDS" } = Astro.props;
const currentPath = Astro.url.pathname;
const isIndexPage = currentPath === "/" || currentPath === "";

// Helper function to check if a link is the current page
const isCurrentPage = (href: string) => currentPath === href;

// Dynamically get all component pages
const componentPages = await Astro.glob('../pages/components/*.astro');

// Extract component information and sort alphabetically
const components = componentPages
  .map(page => {
    // Extract filename without extension
    const filename = page.file.split('/').pop()?.replace('.astro', '') || '';
    
    // Convert filename to display name (e.g., 'popup-nav' -> 'Popup Nav')
    const displayName = filename
      .split('-')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
    
    return {
      name: displayName,
      href: `/components/${filename}`,
      filename
    };
  })
  .sort((a, b) => a.name.localeCompare(b.name));
---

<!doctype html>
<html lang="en-us" data-theme="verdana">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title} - {siteName}</title>
    <meta
      name="description"
      content="A design system built with Astro, MCSS, semantic HTML, and vanilla JavaScript."
    />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    {isIndexPage && (
      <>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Flow+Block&display=swap" rel="stylesheet">
      </>
    )}
  </head>
  <body>
    {!isIndexPage && (
      <header class="doc-header">
        <p><a href="/">{siteName}</a></p>
        <nav>
          <ul>
            {components.map(component => (
              <li>
                <a 
                  href={component.href} 
                  aria-current={isCurrentPage(component.href) ? "page" : undefined}
                >
                  {component.name}
                </a>
              </li>
            ))}
            <li>
              <Switch
                id="verdana-mode"
                name="theme-toggle"
                label="Verdana Mode"
                checked={true}
              />
            </li>
          </ul>
        </nav>
      </header>
    )}
    {
      isIndexPage ? (
        <main class="doc-main">
          <slot />
        </main>
      ) : (
        <main>
          <slot />
        </main>
      )
    }
    <hr>
    <footer>
      <p><em>The design system is created by <a href="https://mikemai.net">Mike Mai</a> with the help of AI buddy <a href="https://cursor.com">Cursor</a>.</em></p>
    </footer>
  </body>
</html>

<style is:global>
  @import url("../styles/global.css");
</style>
