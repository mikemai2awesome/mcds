@import url('./mcss.css');

@layer config, resets, elements, components, docs, utilities;

@layer docs {

  /* Write documentation styles here */
  .doc-main {
    padding: 0;
    overflow-x: clip;

    & + hr {
      margin-block-start: 0;
      border-block-end-width: 0;
    }
  }

  body:has(.doc-header, .doc-main) {
    padding-block-start: 0;
  }

  .doc-header {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    gap: var(--gutter);
    margin: 0;
    padding-inline: 10vi;
    padding-block: calc(var(--stack) * 2);
    color: white;
    background-image: url("https://mikemai.net/mcss/img/mc-hero-edited.jpg");
    background-size: cover;
    background-position: top center;

    >* {
      margin: 0;
    }

    >*:first-child {
      font: inherit;
      font-weight: bold;
    }
  }

  .doc-header p a {
    text-decoration: none;

    @media (any-hover: hover) {
      &:hover {
        text-decoration: underline;
      }
    }
  }

  .doc-header + hr {
    margin-block-start: 0;
  }

  .doc-header + main > *:first-child {
    margin-block-start: 0;
  }
    
  .doc-hero {
    display: grid;
    align-content: start;
    grid-template-areas: 
      "text text"
      "kitchen-sink1 kitchen-sink2";
    grid-template-columns: repeat(2, minmax(50dvi, 1fr));
    gap: var(--gutter);
    row-gap: calc(var(--stack) * 2);
    margin-block: 0;
    margin-inline: 0 -15vi;
    padding-inline: 10vi;
    padding-block: var(--landmark-hr-margin-block);
    list-style: none;
    background-color: color-mix(in hsl, canvasText 4%, transparent);
    
    > li {
      display: flex;
      flex-direction: column;
      gap: var(--stack);
      grid-area: text;
      min-inline-size: 0;
      
      &:first-child {
        max-inline-size: 55ch;
        padding-inline-end: 20vi;
      }

      &:nth-child(2) {
        grid-area: kitchen-sink1;
      }

      &:nth-child(3) {
        grid-area: kitchen-sink2;
      }
      
      &:not(:first-child) {
        filter: grayscale(100%);
        user-select: none;
        pointer-events: none;

        *:not(.mc-switch__control) {
          font-family: "Flow Block", system-ui, sans-serif !important;
          font-weight: 400 !important;
          font-style: normal !important;
          word-break: break-all !important;
        }
      }

      > * {
        margin: 0;
      }
    }
    
    @media (min-width: 66rem) and (orientation: landscape) {
      align-content: center;
      grid-template-areas: "text kitchen-sink1 kitchen-sink2";
      grid-template-columns: repeat(3, minmax(35ch, 1fr));
      min-block-size: 100dvb;

      > li {
        &:first-child {
          align-self: center;
          padding-inline-end: 0;
        }
      }
    }
  }

  .doc-section {
    padding-inline: var(--page-padding-inline);

    &:first-of-type {
      margin-block-start: var(--landmark-hr-margin-block);

      > *:first-child {
        margin-block-start: 0;
      }
    }
  }

  .doc-side-by-side {
    display: flex;
    flex-wrap: wrap;
    gap: calc(var(--gutter) * 1.5);
    row-gap: var(--stack);

    > * {
      flex: 1 1 25ch;
    }
  }

  .doc-demo-inline {
    display: flex;
    flex-wrap: wrap;
    gap: calc(var(--gutter) / 2);
    row-gap: var(--stack);

    >* {
      margin: 0;
    }
  }

  .doc-demo-stack {
    display: flex;
    flex-direction: column;
    gap: var(--stack);

    >* {
      margin: 0;
    }
  }

  .doc-component-example {
    margin-block-start: var(--stack);

    >*:not(dialog) {
      margin: 0;
    }
  }
}

@layer components {

  /* Write component styles in each component file. If you write overrides here, you will be SHAMED! */
}

@layer utilities {

  /* Write utility classes here. */
  .u-skip-link {
    position: absolute;
    inset-block-start: 1ex;
    inset-inline-start: 1ex;
    padding: 1ex;
    background-color: canvas;
  }

  .u-margin-none {
    margin: 0;
  }

  .u-visually-hidden:not(:focus):not(:active),
  .u-skip-link:not(:focus) {
    position: absolute;
    clip-path: inset(50%);
    overflow: hidden;
    inline-size: 1px;
    block-size: 1px;
    white-space: nowrap;
  }

  .u-serif {
    font-family: Georgia, serif;
  }

  .u-sans {
    font-family: Verdana, system-ui, sans-serif;
    letter-spacing: 0;
  }

  .u-word-break-all {
    word-break: break-all;
  }
}

@layer config {
  :root {
    --transition: 0.3s ease-in-out;
  }
}
